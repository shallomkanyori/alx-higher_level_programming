============================
Tests for 7-base_geometry.py
============================

This module defines the class ``BaseGeometry``. The class defines the
unimplemented method ``area()`` as well as the method ``integer_validation()``
that validate a value.

``integer_validation()`` takes in two arguments, a name and a value. The name
is assumed to always be a string. The value should be an integer greater than 0.

::

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", 12)

	>>> bg.integer_validator("width", 89)

	>>> bg.integer_validator("", 100)

If the second argument, the value, is not an integer, ``integer_validation()``
raises a TypeError.

::

	>>> bg.integer_validator("name", "John")
	Traceback (most recent call last):
	TypeError: name must be an integer

	>>> bg.integer_validator("position", (1, 2))
	Traceback (most recent call last):
	TypeError: position must be an integer

	>>> bg.integer_validator("temp", 12.5)
	Traceback (most recent call last):
	TypeError: temp must be an integer

	>>> bg.integer_validator("attr", None)
	Traceback (most recent call last):
	TypeError: attr must be an integer

	>>> bg.integer_validator("bool", True)
	Traceback (most recent call last):
	TypeError: bool must be an integer

	>>> bg.integer_validator("list", [50])
	Traceback (most recent call last):
	TypeError: list must be an integer

	>>> bg.integer_validator("dict", {"1": 1, "2": 2})
	Traceback (most recent call last):
	TypeError: dict must be an integer

	>>> bg.integer_validator("set", {1, 2})
	Traceback (most recent call last):
	TypeError: set must be an integer

If the second argument, the value, is less than or equal to 0,
``integer_validation()`` raises a ValueError.

::

	>>> bg.integer_validator("distance", -4)
	Traceback (most recent call last):
	ValueError: distance must be greater than 0

	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	ValueError: age must be greater than 0

``integer_validation()`` takes in two arguments.

::

	>>> bg.integer_validator("temp")
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bg.integer_validator("one", 2, 3)
	Traceback (most recent call last):
	TypeError: integer_validator() takes 3 positional arguments but 4 were given

``area()`` is not implemented and takes no arguments.

::

	>>> bg.area()
	Traceback (most recent call last):
	Exception: area() is not implemented

	>>> bg.area(1)
	Traceback (most recent call last):
	TypeError: area() takes 1 positional argument but 2 were given

	>>> bg.area(1, 2)
	Traceback (most recent call last):
	TypeError: area() takes 1 positional argument but 3 were given
